name: Python CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'server/**'
      - '.github/workflows/python-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'server/**'
      - '.github/workflows/python-ci.yml'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        cd server
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov black mypy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Lint with flake8
      run: |
        cd server
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
    
    - name: Check formatting with black
      run: |
        cd server
        black --check --line-length 100 .
    
    - name: Type check with mypy
      run: |
        cd server
        mypy --ignore-missing-imports .
    
    - name: Test with pytest
      run: |
        cd server
        pytest --cov=./ --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./server/coverage.xml
        flags: server
        name: python-${{ matrix.python-version }}
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        cd server
        python -m pip install --upgrade pip
        pip install build wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Build package
      run: |
        cd server
        python -m build
    
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: server-package
        path: |
          server/dist/
          !server/dist/*.tar.gz
