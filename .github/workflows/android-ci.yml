name: Android CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'android/**'
      - '.github/workflows/android-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'android/**'
      - '.github/workflows/android-ci.yml'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle
    
    - name: Setup Gradle
      run: |
        cd android
        # Create gradle wrapper if it doesn't exist
        if [ ! -f "gradle/wrapper/gradle-wrapper.jar" ]; then
          echo "Downloading Gradle wrapper..."
          mkdir -p gradle/wrapper
          curl -o gradle/wrapper/gradle-wrapper.jar https://repo.gradle.org/gradle/api/v1/dependency/maven/org/gradle/gradle-wrapper/8.0/gradle-wrapper-8.0.jar
          curl -o gradle/wrapper/gradle-wrapper.properties https://raw.githubusercontent.com/gradle/gradle/v8.0.0/gradle/wrapper/gradle-wrapper.properties
        fi
        chmod +x gradlew
    
    - name: Lint with Gradle
      run: |
        cd android
        ./gradlew lint
    
    - name: Upload lint results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-results
        path: android/app/build/reports/lint-results-debug.html

  test:
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle
    
    - name: Setup Gradle
      run: |
        cd android
        # Create gradle wrapper if it doesn't exist
        if [ ! -f "gradle/wrapper/gradle-wrapper.jar" ]; then
          echo "Downloading Gradle wrapper..."
          mkdir -p gradle/wrapper
          curl -o gradle/wrapper/gradle-wrapper.jar https://repo.gradle.org/gradle/api/v1/dependency/maven/org/gradle/gradle-wrapper/8.0/gradle-wrapper-8.0.jar
          curl -o gradle/wrapper/gradle-wrapper.properties https://raw.githubusercontent.com/gradle/gradle/v8.0.0/gradle/wrapper/gradle-wrapper.properties
        fi
        chmod +x gradlew
    
    - name: Run unit tests
      run: |
        cd android
        ./gradlew testDebugUnitTest
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: android/app/build/reports/tests/testDebugUnitTest/

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle
    
    - name: Setup Gradle
      run: |
        cd android
        # Create gradle wrapper if it doesn't exist
        if [ ! -f "gradle/wrapper/gradle-wrapper.jar" ]; then
          echo "Downloading Gradle wrapper..."
          mkdir -p gradle/wrapper
          curl -o gradle/wrapper/gradle-wrapper.jar https://repo.gradle.org/gradle/api/v1/dependency/maven/org/gradle/gradle-wrapper/8.0/gradle-wrapper-8.0.jar
          curl -o gradle/wrapper/gradle-wrapper.properties https://raw.githubusercontent.com/gradle/gradle/v8.0.0/gradle/wrapper/gradle-wrapper.properties
        fi
        chmod +x gradlew
    
    - name: Build with Gradle
      run: |
        cd android
        ./gradlew assembleDebug
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: android/app/build/outputs/apk/debug/app-debug.apk

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download APK
      uses: actions/download-artifact@v4
      with:
        name: app-debug
        path: artifacts
    
    - name: Create GitHub Release
      if: github.ref == 'refs/heads/main'
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/app-debug.apk
        draft: false
        prerelease: false
        name: Release ${{ github.ref_name }}
        tag_name: v${{ github.run_number }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
