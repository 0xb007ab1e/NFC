"""Add metadata to NFCTag & adjust User model

Revision ID: 20250626_030929
Revises: 
Create Date: 2025-01-26T03:09:29.123456

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '20250626_030929'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create device table
    op.create_table('device',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('device_id', sa.String(length=255), nullable=False),
        sa.Column('device_name', sa.String(length=255), nullable=False),
        sa.Column('android_id', sa.String(length=255), nullable=True),
        sa.Column('device_model', sa.String(length=255), nullable=True),
        sa.Column('device_manufacturer', sa.String(length=255), nullable=True),
        sa.Column('app_version', sa.String(length=50), nullable=True),
        sa.Column('android_version', sa.String(length=50), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('last_seen', sa.DateTime(), nullable=True),
        sa.Column('settings', sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('device_id')
    )
    op.create_index(op.f('ix_device_device_id'), 'device', ['device_id'], unique=False)
    op.create_index(op.f('ix_device_device_name'), 'device', ['device_name'], unique=False)
    
    # Create user table
    op.create_table('user',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('username', sa.String(length=50), nullable=False),
        sa.Column('email', sa.String(length=255), nullable=False),
        sa.Column('password_hash', sa.String(length=255), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('is_admin', sa.Boolean(), nullable=False),
        sa.Column('permissions', sa.JSON(), nullable=True),
        sa.Column('first_name', sa.String(length=50), nullable=True),
        sa.Column('last_name', sa.String(length=50), nullable=True),
        sa.Column('last_login', sa.DateTime(), nullable=True),
        sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
        sa.Column('locked_until', sa.DateTime(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('metadata', sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=False)
    
    # Create connection table
    op.create_table('connection',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('connection_type', sa.String(length=50), nullable=False),
        sa.Column('host', sa.String(length=255), nullable=True),
        sa.Column('port', sa.Integer(), nullable=True),
        sa.Column('username', sa.String(length=255), nullable=True),
        sa.Column('password_hash', sa.String(length=255), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('last_connected', sa.DateTime(), nullable=True),
        sa.Column('connection_data', sa.JSON(), nullable=True),
        sa.Column('device_id', sa.String(length=36), nullable=False),
        sa.Column('user_id', sa.String(length=36), nullable=False),
        sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_connection_connection_type'), 'connection', ['connection_type'], unique=False)
    
    # Create nfc_tag table
    op.create_table('nfc_tag',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('uid', sa.String(length=255), nullable=False),
        sa.Column('tech_list', sa.JSON(), nullable=False),
        sa.Column('tag_type', sa.String(length=50), nullable=False),
        sa.Column('is_writable', sa.Boolean(), nullable=False),
        sa.Column('is_ndef_formatted', sa.Boolean(), nullable=False),
        sa.Column('max_size', sa.Integer(), nullable=True),
        sa.Column('read_timestamp', sa.DateTime(), nullable=False),
        sa.Column('read_location', sa.JSON(), nullable=True),
        sa.Column('device_id', sa.String(length=36), nullable=False),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('custom_data', sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nfc_tag_tag_type'), 'nfc_tag', ['tag_type'], unique=False)
    op.create_index(op.f('ix_nfc_tag_uid'), 'nfc_tag', ['uid'], unique=False)
    
    # Create nfc_record table
    op.create_table('nfc_record',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('record_type', sa.String(length=10), nullable=False),
        sa.Column('payload', sa.LargeBinary(), nullable=False),
        sa.Column('record_id', sa.String(length=255), nullable=True),
        sa.Column('language_code', sa.String(length=10), nullable=True),
        sa.Column('encoding', sa.String(length=20), nullable=True),
        sa.Column('mime_type', sa.String(length=255), nullable=True),
        sa.Column('parsed_content', sa.JSON(), nullable=True),
        sa.Column('tag_id', sa.String(length=36), nullable=False),
        sa.ForeignKeyConstraint(['tag_id'], ['nfc_tag.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nfc_record_record_type'), 'nfc_record', ['record_type'], unique=False)
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_nfc_record_record_type'), table_name='nfc_record')
    op.drop_table('nfc_record')
    op.drop_index(op.f('ix_nfc_tag_uid'), table_name='nfc_tag')
    op.drop_index(op.f('ix_nfc_tag_tag_type'), table_name='nfc_tag')
    op.drop_table('nfc_tag')
    op.drop_index(op.f('ix_connection_connection_type'), table_name='connection')
    op.drop_table('connection')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_device_device_name'), table_name='device')
    op.drop_index(op.f('ix_device_device_id'), table_name='device')
    op.drop_table('device')
    # ### end Alembic commands ###
